// this was auto-generated by Bloc-Code-Generator

//import 'package:rxdart/rxdart.dart';
import 'dart:async';
import 'package:meta/meta.dart';

class blocName {
  final inputController = StreamController<InputMap>();
  //final inputController = BehaviorSubject<InputMap>();
  final outputController = StreamController<OutputMap>();
  //final outputController = BehaviorSubject<OutputMap>();

  Sink<InputMap> get inputSink => inputController.sink;
  Stream<OutputMap> get outputStream => outputController.stream;
  //Observable<OutputMap> get outputStream => outputController.stream;

  blocName() {
    inputController.stream.listen(eventDispather);
  }
  eventDispather(InputMap inputMap) {
    if (inputMap.event == Event.increment) {
      inputMap.value++;
    } else if (inputMap.event == Event.decrement) {
      inputMap.value--;
    }
    outputController.add(OutputMap(value: inputMap.value, state: ScreenState.idle));
  }

  dispose() {
    inputController.close();
    outputController.close();
  }
}

enum Event { increment, decrement }

enum ScreenState { idle, loading }

class InputMap {
  
  dynamic value;
  Event event;
  InputMap({@required this.value, @required this.event});
}

class OutputMap {
  
  dynamic value;
  ScreenState state;
  OutputMap({@required this.value, @required this.state});
}
